on:
  pull_request:
    branches: [main]
    paths:
      - 'appointments/**'
  push:
    paths:
      - 'appointments/**'
  
concurrency:
  group: microservices-deployment
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Check for changes in the appointments service
        id: check_changes
        uses: dorny/paths-filter@v2.11.1
        with:
          filters: |
            changed:
               - 'appointments/**'

      - name: Set up Docker Buildx
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to DockerHub
        if: steps.check_changes.outputs.changed
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and push Docker image
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v5.1.0
        with:
          context: ./appointments
          file: ./appointments/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/appointments-img:${{ github.run_number }}

      - name: Pull the latest changes from the repository
        if: steps.check_changes.outputs.changed == 'true'
        run: git pull origin ${{ github.ref }}

      - name: Update docker-compose.yaml
        if: steps.check_changes.outputs.changed
        run: |
          sed -i 's|${{ secrets.DOCKERHUB_USERNAME}}/appointments-img:.*|${{ secrets.DOCKERHUB_USERNAME}}/appointments-img:${{ github.run_number }}|' docker-compose.yaml
          # Only proceed if there are changes in the docker-compose.yaml
          if ! git diff --quiet; then
            git config --global user.name 'github-actions'
            git config --global user.email 'github-actions@github.com'
            git add docker-compose.yaml
            git commit -m "Update docker-compose.yaml for appointments service to version ${{ github.run_number }}"
            # If it's a pull request, handle the detached HEAD state
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              # Store the new commit SHA
              NEW_COMMIT_SHA=$(git rev-parse HEAD)
              # Fetch and checkout the actual PR branch
              git fetch origin ${{ github.head_ref}}
              git checkout -b ${{ github.head_ref }} origin/${{ github.head_ref}}
              # Cherry-pick the new commit onto the PR branch
              git cherry-pick $NEW_COMMIT_SHA
              # Push the changes back to the PR branch
              git push https://${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }} ${{ github.head_ref}}
            else
              # If it's not a pull request, just push the changes to main
              git push https://${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }} HEAD:main
            fi
          fi
